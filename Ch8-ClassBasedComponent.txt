Chapter - 8 :  Class based component

>>>> FIRST THING FIRST CLASS BASED COMPONENT ARE NO LONGER USED

>>>> MI IMPORTANT THING ABOUT CLASS BASED COMPONENT IS RENDER METHOD WE CAN NOT CREATE CLASS BASED COMPONENT WITHOUT RENDER METHOD.

>>>> IN CLASS BASED COMPONENT RENDER METHOD RETURNS SOME JSX.

>>>>> IN CLASS BASED COMPONENT WE GET PROPS USING this.props WHERE IN FUNCTIONAL BASED COMPONENT WE WERE GETTING LIKE (props) HERE MI LEARN ABOUT
      CLASS BASED COMPONENT AS WE ALREADY HAVE IDEA ABOUT FUNCTIONAL BASED COMPONENT

>>>>> WHY DO WE DO super(props) IN constructor in  CLASS BASED COMPONENT.

>>> IN CLASS BASED COMPONENT ALL THE STATE VARIABLE COMPONENT ARE CREATED AS ONE OBJECT LIKE : 

    // THIS ONE IS CORRECT
     this.state ={
      name : "Haresh",
      count : 2
     }

     /// THIS ONE IS WRONG DODO USE STATE NHI NHI HOTA HAI BHAI ESA
       this.state ={
        name : "Haresh"
     }
       this.state ={
       count : 2 
     }


>>>> DO NOT MAKE SAME MISTAKE AGAIN AND AGAIN TAG BUTTON IS NOT SELF CLOSING TAG BECAUSE YOU HAVE TO WRITE TITLE THEN YOU HAVE TO WRITE BETWEEN 
     OPENING AND CLOSING TAG. <button>Search</button> like this.

>>> AND ALSO WE NEVER MUTED STATE VARIABLE DIRECTLY BECAUSE REACT WILL RE RENDER DOM ONLY IF YOU DO IT WITH SET STATE.

>>> IN REACT LIFE CYCLE FIRST THE CONSTRUCOR IS CALLED AND THEN ONLY RETURN FUNCTION WILL BE CALLED

>>>> ComponentDidMount in class based component is similer to useEffect in functional based component because it be also called after render method

>>>  FIRST TIME I CAME TO KNOW THAT CONSTRUCOR ANR RENDER ARE THE LIFE CYCLE method.

>>> FIRST OF ALL CONSTRUCOR GET CALLED
>>> THEN COMPONENT RENDER
>>  THEN COMPONENT DID MOUNT GET CALLED


>>>> NOW UNDERSTAND BY LOGIC WHY ITS IMPORTANT THAT COMPONENT DID MOUNT IS GETTING CALLED THIRD BECAUSE  REACT SAYS FIRST RENDER ATLEAST WITH
     DEFAULT STATE AND THEN ONLY RENDER WITH APIS DATA SO USER CAN SEE SOMETHING ATLEAST WITH INITIAL STATE


 >>>> THIS IS THE BEST THING TILL NOW CREATE TWO CLASS BASED COMPONENT ONE PARENT ONE CHILD NOW LET US KNOW IN WHICH ORDER THERE METHODS WILL BE CALLED

      1. Parent constructor
      2. Parent Render 
         (See now in parent render we have child component so it will  render all the methods of child and then again it will go to parent)
        3. Child constructor
        4.Child Render
        5 Child ComponentDidMount (This one was confusing)
     6.Parent ComponentDidMount
       

  >>>>> ABOVE THING IS MUCH MUCH MUCH INSTRESTING WHEN WE HAVE MULTIPLE CHILDREN MAKE SURE NO MATTER WHAT ITS ALWAYS ALWAYS  GOING TO CALL
        CONSTRUCOR DID MOUNT. (OMG JUST WATCH VIDEO).


  >>>> REACT DOES THAT IN TWO FACES FIRST IS RENDER FACE AND SECOND ONE IS COMMIT FACE   ::::: (RENDER) :::::: (COMMIT)    


  >>>> RENDER FACE INCLUDE YOUR CONSTRUCOR AND RENDER METHOD  AND COMMIT FACE IS THE ONE WHO ACTUALLY UPDATE THE DOM


  >>>>> NEED TO LEARN THIS WE CAN DO  COMPONENT DID MOUNT FUNCTION ASYNC BUT WE CAN NOT MAKE USEEFFECT ASYNC


  >>>>> THREE STATE : MOUNTING , UPDATING AND UNMOUNTING   : RE RENDERING FACE IS KNOW IS UPDATING 


  >>>> SEE DON'T MAKE IT COMPLICATED FIRST THING FIRST REACT BASICALLY HAS TWO FACES REACT RENDER PHASE AND COMMIT PHASE FOR PARENT AND ALL 
       ITS CHILD REACT COMPLETE RENDER PHASE FIRST AND THEN MOVE TO COMMIT PHASE AND WHEN WE SAY COMMIT PHASE IT FIRST UPDATE THE 
       DOM AND THEN IF ANY API CALLS ARE THERE THEN IT WILL BE EXECUTED AND ONE MORE THING TO LEARN THAT WE CAN HAVE ASYNC IN COMPONENT DID MOUNT 
       BUT SAME WE CAN NOT DO IT IN USEFFECT.

       SO THINGS TO REMEMBER HERE IS : DIFFERENT STATES LIKE MOUNTING , UPDATING AND UNMOUNTING 
       LIFECYLE METHODS : LIKE CONSTRUCTOR RENDER AND COMPONENTDID MOUNT


  >>>>> NEXT WE ARE GOING TO LEARN COMPONENT DID UPDATED : (COMMIT FACE)     SIMPLY WHEN YOU HAVE SOME API CALLS IN ComponentDidMount and once 
        that done it will trigger component re rendering again and at that time function and it will call ComponentDidUpdate function

  >>>>> ComponentDidMount will be called after first render  and ComponentDidUpdate will be called after every next render. (VVVMI TO UNDERSTAND) 

       >>> So till now we learned four methods : 
           1. constructor
           2. render 
           3. ComponentDidMount
           4. ComponentDidUpdate

           And mostly i have clear idea on all of them

   >>>>> AND MAKE SURE AT THE TIME OF UPDATE IT WILL CALL RENDER FUNCTION FIRST AND THEN IT WILL MOVE TO ComponentDidUpdate SO DON'T GET CONFUSED.

>>>>> ComponentWillUnmount : (Just before your component is about to unmount this one will be called like in useEffect we have RETURN statement) 
      IN simple term when you leave current page and go to other page at that time it will be called 


>>>> So now we learned 5 methods : 
     1. constructor
     2. render
     3. ComponentDidMount
     4. ComponentDidUpdate
     5. ComponentWillUnmount


  >>>>>>>>>>> THIS IS INSTRESTING THAT NEVER COMPARE YOUR LIFECYLE WITH USEFFECT (SHOKING)   


  >>>>> WHY EVEN WE NEED ComponentWillUnmount WHEN TO USE ? I UNDERSTAND clean up but what sort of clean up.

       See react apps are single page application means whatever happen is happen on single page and thats why when you 
       move from one page to another page there are lots of things that we need to clear.  Things like setInterVal else
       it will always be called even after we leave the page and it will be continue to perform task even after moving to 
       another page. MAKE SURE TO CLEAN THIS IN ComponentWillUnmount.


>>>> YOU CAN RETURN A FUNCTION FROM  USEEFFECT AND WE MAINLY USED IT FOR ALL SORT OF CLEAN UP AGAIN BEST EXAMPLE IS SETINTERVAL AND CLEAN INTERVAL